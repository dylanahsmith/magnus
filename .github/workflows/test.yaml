name: Test

on:
- push
- pull_request

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
        - ubuntu-latest
        - macos-latest
        - windows-2019
        - windows-latest
        ruby-version:
        - "2.6"
        - "2.7"
        - "3.0"
        - "3.1"
        exclude:
        # older versions of Ruby seem to be messed up on new Windows env
        - os: windows-latest
          ruby-version: "2.6"
        - os: windows-latest
          ruby-version: "2.7"
        - os: windows-latest
          ruby-version: "3.0"
        # don't bother with 3.1 on old Windows, it works fine on new Windows
        - os: windows-2019
          ruby-version: "3.1"
    steps:
    - uses: actions/checkout@v2
    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: ${{ matrix.ruby-version }}
    - name: Set up Rust
      if: contains(matrix.os, 'windows')
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable-x86_64-pc-windows-gnu
        default: true
    - name: Set LD_LIBRARY_PATH
      if: matrix.os == 'ubuntu-latest'
      run: echo LD_LIBRARY_PATH=$(ruby -e 'print RbConfig::CONFIG["libdir"]') >> $GITHUB_ENV
    - name: Fix clang
      if: matrix.os == 'windows-latest' && matrix.ruby-version == '3.1'
      run: |
        pacman --remove --cascade mingw-w64-x86_64-clang
        pacman --sync --noconfirm --needed $ENV:MINGW_PACKAGE_PREFIX-clang
    - name: Run tests
      run: cargo test
    - name: Example gem tests
      working-directory: examples/rust_blank
      run: rake test
